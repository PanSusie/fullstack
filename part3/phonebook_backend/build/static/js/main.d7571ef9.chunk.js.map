{"version":3,"sources":["services/node.js","components/Node.js","components/Notification.js","App.js","index.js"],"names":["url","axios","get","then","response","data","newPerson","post","id","delete","target","put","Filter","value","onChange","label","Input","PersonForm","props","onSubmit","newName","handleNameChange","newNumber","handleNumberChange","type","Persons","person","onClick","name","number","Notification","error","notification","className","App","phonebook","useState","persons","setPersons","setNewName","setNewNumber","filterName","setFilterName","showName","setShowName","setErrorMessage","setNotification","nameList","map","toLowerCase","useEffect","phoneService","defaultPhoneBook","nameFilter","filter","toLocaleLowerCase","event","indexOf","preventDefault","nameObject","personIndex","window","confirm","changedPerson","returnedPersons","catch","setTimeout","concat","i","promise","console","log","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.d7571ef9.chunk.js","sourcesContent":["import axios from 'axios'\n\nconst url = '/api/persons'\n\nconst getPersons = () =>{\n  const request = axios.get(url)\n  return request.then(response => response.data)\n}\n\nconst addPerson = (newPerson) =>{\n  const request = axios.post(url, newPerson)\n  return request.then(response => response.data)\n}\n\nconst deletePerson = (id) =>{\n  const request = axios.delete( `${url}/${id}`)\n  return request.then(response => response.data)\n}\n\nconst updatePerson =(id, target) =>{\n  const request = axios.put(`${url}/${id}`, target)\n  return request.then(response => response.data)\n}\n\nexport default { getPersons, addPerson, deletePerson, updatePerson }\n","import React from 'react'\n\n\nconst Filter = ({value, onChange}) => (\n  <Input label='filter shown with:' value={value} onChange={onChange}/>\n)\n\nconst Input = ({label, value, onChange}) => (\n  <div>{label}<input value={value} onChange={onChange}/></div>\n)\n\nconst PersonForm = (props) => (\n  <form onSubmit={props.onSubmit}>\n    <Input label='name:' value={props.newName} onChange={props.handleNameChange}/>\n    <Input label='number:' value={props.newNumber} onChange={props.handleNumberChange} />\n    <button type=\"submit\" >add</button>\n  </form>\n)\n\nconst Persons = ({person, onClick}) => (\n  <div>\n  <form onClick={onClick}>\n  <p key={person.id}> {person.name} {person.number}\n  <button type='button' value={person.id}>delete</button>\n  </p>\n  </form>\n  </div>\n)\n\nexport {Filter, PersonForm, Persons}\n","import '../index.css'\nimport React from 'react'\n\nconst Notification = ({ error, notification }) => {\n  if (error === null && notification === null) {\n    return null\n  } else if (error !== null && notification === null) {\n    return (\n      <div className=\"error\">\n        {error}\n      </div>\n    )\n  } else if (error === null && notification !== null) {\n    return (\n      <div className=\"note\">\n        {notification}\n      </div>\n    )\n  }\n}\n\nexport default Notification\n","import React, { useState,useEffect } from 'react'\nimport phoneService from './services/node'\nimport {PersonForm, Filter, Persons} from './components/Node'\nimport Notification from './components/Notification'\n\n\nconst App = (phonebook) => {\n    const [persons, setPersons] = useState([])\n    const [newName, setNewName] = useState('')\n    const [newNumber, setNewNumber] = useState('')\n    const [filterName, setFilterName] = useState('')\n    const [showName, setShowName] = useState(true)\n    const [error, setErrorMessage] = useState(null)\n    const [notification, setNotification] = useState(null)\n\n    const nameList = persons.map(person => person.name.toLowerCase())\n\n    //retrieve persons data from the server 3001\n    useEffect(() => {\n      phoneService\n      .getPersons()\n      .then(defaultPhoneBook => {\n        setPersons(defaultPhoneBook)\n      })\n    }, [])\n\n\n    // add a name\n    const addName = (event) => {\n      event.preventDefault()\n      const nameObject = {\n        name: newName,\n        number: newNumber,\n      }\n\n      const personIndex = nameList.indexOf(newName.toLowerCase())\n      if (personIndex >= 0) {\n        if (window.confirm(`${newName} is already added to phonebook, replace the old number with a new one?`)){\n          const changedPerson = {...nameObject, number: newNumber}\n\n          phoneService\n          .updatePerson(persons.filter(person => person.name === newName)[0].id, changedPerson)\n          .then(returnedPersons => {\n            setPersons(persons.map(person => person.id !== personIndex+1 ? person: returnedPersons))\n          })\n          .catch(error => {\n            setErrorMessage(\n              `'${newName}' was already removed from server`\n            )\n            setTimeout(() => {\n              setErrorMessage(null)\n            }, 5000)\n          })\n        }\n\n      } else {\n          phoneService\n          .addPerson(nameObject)\n          .then(returnedPersons =>{\n            setPersons(persons.concat(returnedPersons))\n            setNewName('')\n            setNewNumber('')\n            setNotification(\n              `add a new person '${newName}' to phone book`\n            )\n            setTimeout(() => {\n              setNotification(null)\n            }, 5000)\n          })\n          .catch(error => {\n            setErrorMessage(\n              error.response.data.error\n             )\n            setTimeout(() => {\n               setErrorMessage(null)\n             }, 5000)\n          })\n        }\n\n    }\n\n    const deleteName = (id, name) => {\n      if (window.confirm(`Delete ${name} ? `)) {\n\n      phoneService\n      .deletePerson(id)\n      .then(response =>{\n        setPersons(persons.filter(person => person.id !== id))\n      })\n\n      }\n    }\n\n\n    const handleNameChange = (event) => {\n      setNewName(event.target.value)\n    }\n\n    const handleNumberChange = (event) => {\n      setNewNumber(event.target.value)\n    }\n\n    const handleFilterChange = (event) => {\n      setFilterName(event.target.value)\n      const filter = event.target.value.toLowerCase()\n      //const nameList = persons.map(person => person.name.toLowerCase())\n\n      if (nameList.indexOf(filter) >= 0) {\n        setShowName(false)\n      }else{\n        setShowName(true)\n      }\n    }\n\n\n    const nameFilter = showName ?\n      persons :\n      persons.filter(person => person.name.toLocaleLowerCase() === filterName.toLowerCase())\n\n  return (\n    <div>\n      <h2>Phonebook</h2>\n      <Notification error={error} notification={notification}/>\n      <Filter value={filterName} onChange={handleFilterChange}/>\n      <h3>Add a new</h3>\n      <PersonForm\n      onSubmit={addName}\n      newName={newName}\n      handleNameChange={handleNameChange}\n      newNumber={newNumber}\n      handleNumberChange={handleNumberChange}\n      />\n\n      <h2>Numbers</h2>\n      {nameFilter.map((person,i)=> <Persons key={i} person={person} onClick={()=> deleteName(person.id, person.name)}/>)}\n    </div>\n  )\n}\n\nexport default App\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport axios from 'axios'\n\nconst url = '/api/persons'\n\nconst promise = axios.get(url)\nconsole.log(promise)\n\npromise.then(response => {\n  console.log(response)\n})\n\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)\n"],"sourceRoot":""}